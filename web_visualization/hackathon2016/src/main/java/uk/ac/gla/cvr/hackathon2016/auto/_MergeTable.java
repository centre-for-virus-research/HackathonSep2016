package uk.ac.gla.cvr.hackathon2016.auto;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _MergeTable was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _MergeTable extends CayenneDataObject {

    public static final String ADAPTOR_ALN_LENGTH_PROPERTY = "adaptorAlnLength";
    public static final String ADAPTOR_BIT_SCORE_PROPERTY = "adaptorBitScore";
    public static final String ADAPTOR_EVAL_PROPERTY = "adaptorEVal";
    public static final String ADAPTOR_GAP_OPEN_COUNT_PROPERTY = "adaptorGapOpenCount";
    public static final String ADAPTOR_MISMATCH_COUNT_PROPERTY = "adaptorMismatchCount";
    public static final String ADAPTOR_PERC_IDENTITY_PROPERTY = "adaptorPercIdentity";
    public static final String ADAPTOR_QUERY_END_PROPERTY = "adaptorQueryEnd";
    public static final String ADAPTOR_QUERY_START_PROPERTY = "adaptorQueryStart";
    public static final String ADAPTOR_SUBJECT_END_PROPERTY = "adaptorSubjectEnd";
    public static final String ADAPTOR_SUBJECT_ID_PROPERTY = "adaptorSubjectId";
    public static final String ADAPTOR_SUBJECT_START_PROPERTY = "adaptorSubjectStart";
    public static final String AVERAGE_DEPTH_PROPERTY = "averageDepth";
    public static final String BLAST_ALN_LENGTH_PROPERTY = "blastAlnLength";
    public static final String BLAST_BIT_SCORE_PROPERTY = "blastBitScore";
    public static final String BLAST_EVAL_PROPERTY = "blastEVal";
    public static final String BLAST_GAP_OPEN_COUNT_PROPERTY = "blastGapOpenCount";
    public static final String BLAST_MISMATCH_COUNT_PROPERTY = "blastMismatchCount";
    public static final String BLAST_PERC_IDENTITY_PROPERTY = "blastPercIdentity";
    public static final String BLAST_QUERY_END_PROPERTY = "blastQueryEnd";
    public static final String BLAST_QUERY_START_PROPERTY = "blastQueryStart";
    public static final String BLAST_SUBJECT_END_PROPERTY = "blastSubjectEnd";
    public static final String BLAST_SUBJECT_ID_PROPERTY = "blastSubjectId";
    public static final String BLAST_SUBJECT_START_PROPERTY = "blastSubjectStart";
    public static final String BREADTH_PROPERTY = "breadth";
    public static final String CE_PROPERTY = "ce";
    public static final String CONTIG_ID_PROPERTY = "contigID";
    public static final String CPG_PROPERTY = "cpg";
    public static final String CWF_PROPERTY = "cwf";
    public static final String CZ_PROPERTY = "cz";
    public static final String DIAMOND_ALN_LENGTH_PROPERTY = "diamondAlnLength";
    public static final String DIAMOND_BIT_SCORE_PROPERTY = "diamondBitScore";
    public static final String DIAMOND_EVAL_PROPERTY = "diamondEVal";
    public static final String DIAMOND_GAP_OPEN_COUN_PROPERTY = "diamondGapOpenCoun";
    public static final String DIAMOND_MISMATCH_COUNT_PROPERTY = "diamondMismatchCount";
    public static final String DIAMOND_PERC_IDENTITY_PROPERTY = "diamondPercIdentity";
    public static final String DIAMOND_QUERY_END_PROPERTY = "diamondQueryEnd";
    public static final String DIAMOND_QUERY_START_PROPERTY = "diamondQueryStart";
    public static final String DIAMOND_SUBJECT_END_PROPERTY = "diamondSubjectEnd";
    public static final String DIAMOND_SUBJECT_ID_PROPERTY = "diamondSubjectId";
    public static final String DIAMOND_SUBJECT_START_PROPERTY = "diamondSubjectStart";
    public static final String GC_PROPERTY = "gc";
    public static final String GCS_PROPERTY = "gcs";
    public static final String MAPPED_READS_PROPERTY = "mappedReads";
    public static final String MAX_DEPTH_PROPERTY = "maxDepth";
    public static final String MIN_DEPTH_PROPERTY = "minDepth";
    public static final String PERCENT_COVERED_PROPERTY = "percentCovered";
    public static final String REF_LENGTH_PROPERTY = "refLength";
    public static final String SEQ_PROPERTY = "seq";
    public static final String SEQ_ID_PROPERTY = "seqID";

    public static final String CONTIG_ID_PK_COLUMN = "ContigID";

    public void setAdaptorAlnLength(Integer adaptorAlnLength) {
        writeProperty(ADAPTOR_ALN_LENGTH_PROPERTY, adaptorAlnLength);
    }
    public Integer getAdaptorAlnLength() {
        return (Integer)readProperty(ADAPTOR_ALN_LENGTH_PROPERTY);
    }

    public void setAdaptorBitScore(Float adaptorBitScore) {
        writeProperty(ADAPTOR_BIT_SCORE_PROPERTY, adaptorBitScore);
    }
    public Float getAdaptorBitScore() {
        return (Float)readProperty(ADAPTOR_BIT_SCORE_PROPERTY);
    }

    public void setAdaptorEVal(Float adaptorEVal) {
        writeProperty(ADAPTOR_EVAL_PROPERTY, adaptorEVal);
    }
    public Float getAdaptorEVal() {
        return (Float)readProperty(ADAPTOR_EVAL_PROPERTY);
    }

    public void setAdaptorGapOpenCount(Integer adaptorGapOpenCount) {
        writeProperty(ADAPTOR_GAP_OPEN_COUNT_PROPERTY, adaptorGapOpenCount);
    }
    public Integer getAdaptorGapOpenCount() {
        return (Integer)readProperty(ADAPTOR_GAP_OPEN_COUNT_PROPERTY);
    }

    public void setAdaptorMismatchCount(Integer adaptorMismatchCount) {
        writeProperty(ADAPTOR_MISMATCH_COUNT_PROPERTY, adaptorMismatchCount);
    }
    public Integer getAdaptorMismatchCount() {
        return (Integer)readProperty(ADAPTOR_MISMATCH_COUNT_PROPERTY);
    }

    public void setAdaptorPercIdentity(Float adaptorPercIdentity) {
        writeProperty(ADAPTOR_PERC_IDENTITY_PROPERTY, adaptorPercIdentity);
    }
    public Float getAdaptorPercIdentity() {
        return (Float)readProperty(ADAPTOR_PERC_IDENTITY_PROPERTY);
    }

    public void setAdaptorQueryEnd(Integer adaptorQueryEnd) {
        writeProperty(ADAPTOR_QUERY_END_PROPERTY, adaptorQueryEnd);
    }
    public Integer getAdaptorQueryEnd() {
        return (Integer)readProperty(ADAPTOR_QUERY_END_PROPERTY);
    }

    public void setAdaptorQueryStart(Integer adaptorQueryStart) {
        writeProperty(ADAPTOR_QUERY_START_PROPERTY, adaptorQueryStart);
    }
    public Integer getAdaptorQueryStart() {
        return (Integer)readProperty(ADAPTOR_QUERY_START_PROPERTY);
    }

    public void setAdaptorSubjectEnd(Integer adaptorSubjectEnd) {
        writeProperty(ADAPTOR_SUBJECT_END_PROPERTY, adaptorSubjectEnd);
    }
    public Integer getAdaptorSubjectEnd() {
        return (Integer)readProperty(ADAPTOR_SUBJECT_END_PROPERTY);
    }

    public void setAdaptorSubjectId(String adaptorSubjectId) {
        writeProperty(ADAPTOR_SUBJECT_ID_PROPERTY, adaptorSubjectId);
    }
    public String getAdaptorSubjectId() {
        return (String)readProperty(ADAPTOR_SUBJECT_ID_PROPERTY);
    }

    public void setAdaptorSubjectStart(Integer adaptorSubjectStart) {
        writeProperty(ADAPTOR_SUBJECT_START_PROPERTY, adaptorSubjectStart);
    }
    public Integer getAdaptorSubjectStart() {
        return (Integer)readProperty(ADAPTOR_SUBJECT_START_PROPERTY);
    }

    public void setAverageDepth(Float averageDepth) {
        writeProperty(AVERAGE_DEPTH_PROPERTY, averageDepth);
    }
    public Float getAverageDepth() {
        return (Float)readProperty(AVERAGE_DEPTH_PROPERTY);
    }

    public void setBlastAlnLength(Integer blastAlnLength) {
        writeProperty(BLAST_ALN_LENGTH_PROPERTY, blastAlnLength);
    }
    public Integer getBlastAlnLength() {
        return (Integer)readProperty(BLAST_ALN_LENGTH_PROPERTY);
    }

    public void setBlastBitScore(Float blastBitScore) {
        writeProperty(BLAST_BIT_SCORE_PROPERTY, blastBitScore);
    }
    public Float getBlastBitScore() {
        return (Float)readProperty(BLAST_BIT_SCORE_PROPERTY);
    }

    public void setBlastEVal(Float blastEVal) {
        writeProperty(BLAST_EVAL_PROPERTY, blastEVal);
    }
    public Float getBlastEVal() {
        return (Float)readProperty(BLAST_EVAL_PROPERTY);
    }

    public void setBlastGapOpenCount(Integer blastGapOpenCount) {
        writeProperty(BLAST_GAP_OPEN_COUNT_PROPERTY, blastGapOpenCount);
    }
    public Integer getBlastGapOpenCount() {
        return (Integer)readProperty(BLAST_GAP_OPEN_COUNT_PROPERTY);
    }

    public void setBlastMismatchCount(Integer blastMismatchCount) {
        writeProperty(BLAST_MISMATCH_COUNT_PROPERTY, blastMismatchCount);
    }
    public Integer getBlastMismatchCount() {
        return (Integer)readProperty(BLAST_MISMATCH_COUNT_PROPERTY);
    }

    public void setBlastPercIdentity(Float blastPercIdentity) {
        writeProperty(BLAST_PERC_IDENTITY_PROPERTY, blastPercIdentity);
    }
    public Float getBlastPercIdentity() {
        return (Float)readProperty(BLAST_PERC_IDENTITY_PROPERTY);
    }

    public void setBlastQueryEnd(Integer blastQueryEnd) {
        writeProperty(BLAST_QUERY_END_PROPERTY, blastQueryEnd);
    }
    public Integer getBlastQueryEnd() {
        return (Integer)readProperty(BLAST_QUERY_END_PROPERTY);
    }

    public void setBlastQueryStart(Integer blastQueryStart) {
        writeProperty(BLAST_QUERY_START_PROPERTY, blastQueryStart);
    }
    public Integer getBlastQueryStart() {
        return (Integer)readProperty(BLAST_QUERY_START_PROPERTY);
    }

    public void setBlastSubjectEnd(Integer blastSubjectEnd) {
        writeProperty(BLAST_SUBJECT_END_PROPERTY, blastSubjectEnd);
    }
    public Integer getBlastSubjectEnd() {
        return (Integer)readProperty(BLAST_SUBJECT_END_PROPERTY);
    }

    public void setBlastSubjectId(String blastSubjectId) {
        writeProperty(BLAST_SUBJECT_ID_PROPERTY, blastSubjectId);
    }
    public String getBlastSubjectId() {
        return (String)readProperty(BLAST_SUBJECT_ID_PROPERTY);
    }

    public void setBlastSubjectStart(Integer blastSubjectStart) {
        writeProperty(BLAST_SUBJECT_START_PROPERTY, blastSubjectStart);
    }
    public Integer getBlastSubjectStart() {
        return (Integer)readProperty(BLAST_SUBJECT_START_PROPERTY);
    }

    public void setBreadth(Integer breadth) {
        writeProperty(BREADTH_PROPERTY, breadth);
    }
    public Integer getBreadth() {
        return (Integer)readProperty(BREADTH_PROPERTY);
    }

    public void setCe(Float ce) {
        writeProperty(CE_PROPERTY, ce);
    }
    public Float getCe() {
        return (Float)readProperty(CE_PROPERTY);
    }

    public void setContigID(String contigID) {
        writeProperty(CONTIG_ID_PROPERTY, contigID);
    }
    public String getContigID() {
        return (String)readProperty(CONTIG_ID_PROPERTY);
    }

    public void setCpg(Float cpg) {
        writeProperty(CPG_PROPERTY, cpg);
    }
    public Float getCpg() {
        return (Float)readProperty(CPG_PROPERTY);
    }

    public void setCwf(Float cwf) {
        writeProperty(CWF_PROPERTY, cwf);
    }
    public Float getCwf() {
        return (Float)readProperty(CWF_PROPERTY);
    }

    public void setCz(Float cz) {
        writeProperty(CZ_PROPERTY, cz);
    }
    public Float getCz() {
        return (Float)readProperty(CZ_PROPERTY);
    }

    public void setDiamondAlnLength(Integer diamondAlnLength) {
        writeProperty(DIAMOND_ALN_LENGTH_PROPERTY, diamondAlnLength);
    }
    public Integer getDiamondAlnLength() {
        return (Integer)readProperty(DIAMOND_ALN_LENGTH_PROPERTY);
    }

    public void setDiamondBitScore(Float diamondBitScore) {
        writeProperty(DIAMOND_BIT_SCORE_PROPERTY, diamondBitScore);
    }
    public Float getDiamondBitScore() {
        return (Float)readProperty(DIAMOND_BIT_SCORE_PROPERTY);
    }

    public void setDiamondEVal(Float diamondEVal) {
        writeProperty(DIAMOND_EVAL_PROPERTY, diamondEVal);
    }
    public Float getDiamondEVal() {
        return (Float)readProperty(DIAMOND_EVAL_PROPERTY);
    }

    public void setDiamondGapOpenCoun(Integer diamondGapOpenCoun) {
        writeProperty(DIAMOND_GAP_OPEN_COUN_PROPERTY, diamondGapOpenCoun);
    }
    public Integer getDiamondGapOpenCoun() {
        return (Integer)readProperty(DIAMOND_GAP_OPEN_COUN_PROPERTY);
    }

    public void setDiamondMismatchCount(Integer diamondMismatchCount) {
        writeProperty(DIAMOND_MISMATCH_COUNT_PROPERTY, diamondMismatchCount);
    }
    public Integer getDiamondMismatchCount() {
        return (Integer)readProperty(DIAMOND_MISMATCH_COUNT_PROPERTY);
    }

    public void setDiamondPercIdentity(Float diamondPercIdentity) {
        writeProperty(DIAMOND_PERC_IDENTITY_PROPERTY, diamondPercIdentity);
    }
    public Float getDiamondPercIdentity() {
        return (Float)readProperty(DIAMOND_PERC_IDENTITY_PROPERTY);
    }

    public void setDiamondQueryEnd(Integer diamondQueryEnd) {
        writeProperty(DIAMOND_QUERY_END_PROPERTY, diamondQueryEnd);
    }
    public Integer getDiamondQueryEnd() {
        return (Integer)readProperty(DIAMOND_QUERY_END_PROPERTY);
    }

    public void setDiamondQueryStart(Integer diamondQueryStart) {
        writeProperty(DIAMOND_QUERY_START_PROPERTY, diamondQueryStart);
    }
    public Integer getDiamondQueryStart() {
        return (Integer)readProperty(DIAMOND_QUERY_START_PROPERTY);
    }

    public void setDiamondSubjectEnd(Integer diamondSubjectEnd) {
        writeProperty(DIAMOND_SUBJECT_END_PROPERTY, diamondSubjectEnd);
    }
    public Integer getDiamondSubjectEnd() {
        return (Integer)readProperty(DIAMOND_SUBJECT_END_PROPERTY);
    }

    public void setDiamondSubjectId(String diamondSubjectId) {
        writeProperty(DIAMOND_SUBJECT_ID_PROPERTY, diamondSubjectId);
    }
    public String getDiamondSubjectId() {
        return (String)readProperty(DIAMOND_SUBJECT_ID_PROPERTY);
    }

    public void setDiamondSubjectStart(Integer diamondSubjectStart) {
        writeProperty(DIAMOND_SUBJECT_START_PROPERTY, diamondSubjectStart);
    }
    public Integer getDiamondSubjectStart() {
        return (Integer)readProperty(DIAMOND_SUBJECT_START_PROPERTY);
    }

    public void setGc(Float gc) {
        writeProperty(GC_PROPERTY, gc);
    }
    public Float getGc() {
        return (Float)readProperty(GC_PROPERTY);
    }

    public void setGcs(Float gcs) {
        writeProperty(GCS_PROPERTY, gcs);
    }
    public Float getGcs() {
        return (Float)readProperty(GCS_PROPERTY);
    }

    public void setMappedReads(Integer mappedReads) {
        writeProperty(MAPPED_READS_PROPERTY, mappedReads);
    }
    public Integer getMappedReads() {
        return (Integer)readProperty(MAPPED_READS_PROPERTY);
    }

    public void setMaxDepth(Integer maxDepth) {
        writeProperty(MAX_DEPTH_PROPERTY, maxDepth);
    }
    public Integer getMaxDepth() {
        return (Integer)readProperty(MAX_DEPTH_PROPERTY);
    }

    public void setMinDepth(Integer minDepth) {
        writeProperty(MIN_DEPTH_PROPERTY, minDepth);
    }
    public Integer getMinDepth() {
        return (Integer)readProperty(MIN_DEPTH_PROPERTY);
    }

    public void setPercentCovered(Float percentCovered) {
        writeProperty(PERCENT_COVERED_PROPERTY, percentCovered);
    }
    public Float getPercentCovered() {
        return (Float)readProperty(PERCENT_COVERED_PROPERTY);
    }

    public void setRefLength(Integer refLength) {
        writeProperty(REF_LENGTH_PROPERTY, refLength);
    }
    public Integer getRefLength() {
        return (Integer)readProperty(REF_LENGTH_PROPERTY);
    }

    public void setSeq(String seq) {
        writeProperty(SEQ_PROPERTY, seq);
    }
    public String getSeq() {
        return (String)readProperty(SEQ_PROPERTY);
    }

    public void setSeqID(String seqID) {
        writeProperty(SEQ_ID_PROPERTY, seqID);
    }
    public String getSeqID() {
        return (String)readProperty(SEQ_ID_PROPERTY);
    }

}
